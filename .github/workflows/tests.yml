# .github/workflows/tests.yml
name: unit-tests

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install pytest pytest-cov

      - name: Run unit tests with coverage (xml)
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          set -e
          echo "== PWD and tree (top) =="
          pwd
          ls -la
          echo "== Running pytest =="
          # Force-load the coverage plugin so --cov flags are recognized everywhere
          python -m pytest -q -m unit -p pytest_cov --cov=app --cov-report=xml --cov-report=term-missing
          echo "== Locate coverage files =="
          find . -maxdepth 2 -name "coverage*" -print
          # Assert the XML exists so the next step never has to regenerate it
          test -f coverage.xml || { echo "::error::coverage.xml not found in $PWD"; exit 1; }

      - name: Upload coverage.xml as artifact (debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: unittests
          verbose: true
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
